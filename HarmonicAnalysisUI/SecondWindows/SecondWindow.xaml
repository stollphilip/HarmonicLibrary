<Window x:Class="HarmonicAnalysisUI.SecondWindows.SecondWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:core="clr-namespace:System;assembly=mscorlib"
        xmlns:scorelib="clr-namespace:ScoreLibrary;assembly=ScoreLibrary"
        xmlns:commonlib="clr-namespace:HarmonicAnalysisCommonLib.Quarantine;assembly=HarmonicAnalysisCommonLib"
        xmlns:local="clr-namespace:HarmonicAnalysisUI.SecondWindows"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <!--xmlns:drawing="clr-namespace:System.Drawing;assembly=System.Drawing.Common"-->
    <Window.Resources>
        <!--Create list of enumeration values-->
        <ObjectDataProvider x:Key="myEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="commonlib:ShowNoteAs"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="myEnum1" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="scorelib:ObjectMappings"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="myEnum2" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="scorelib:XYZStaffLayout"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="myEnum3" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="commonlib:DistanceType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="myEnum4" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="commonlib:ContentAlignment"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <x:Array x:Key="zoomValues" Type="sys:String" 
            xmlns:sys="clr-namespace:System;assembly=mscorlib">
            <sys:String>25%</sys:String>
            <sys:String>31%</sys:String>
            <sys:String>40%</sys:String>
            <sys:String>50%</sys:String>
            <sys:String>63%</sys:String>
            <sys:String>80%</sys:String>
            <sys:String>100%</sys:String>
            <sys:String>125%</sys:String>
            <sys:String>160%</sys:String>
            <sys:String>200%</sys:String>
        </x:Array>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Control" Command="{Binding FileNewCommand}"/>
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding FileOpenCommand}"/>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding FileSaveCommand}"/>
        <KeyBinding Key="P" Modifiers="Control" Command="{Binding FilePrintCommand}"/>
    </Window.InputBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="21"/>
            <RowDefinition/>
            <!--<RowDefinition/>-->
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Grid.ColumnSpan="3" >
            <MenuItem Header="_File">
                <MenuItem x:Name="New" Header="_New" Command="{Binding FileNewCommand}" InputGestureText="Ctrl+N"/>
                <MenuItem x:Name="Open" Header="_Open" Command="{Binding FileOpenCommand}" InputGestureText="Ctrl+O"/>
                <Separator/>
                <MenuItem x:Name="Add" Header="_Add" Command="{Binding FileAddCommand}"/>
                <MenuItem x:Name="Delete" Header="_Delete" Command="{Binding FileDeleteCommand}"/>
                <MenuItem x:Name="MoveUp" Header="_MoveUp" Command="{Binding FileMoveUpCommand}"/>
                <MenuItem x:Name="MoveDown" Header="_MoveDown" Command="{Binding FileMoveDownCommand}"/>
                <Separator/>
                <MenuItem x:Name="Save" Header="_Save" Command="{Binding FileSaveCommand}" InputGestureText="Ctrl+S"/>
                <MenuItem x:Name="SaveAs" Header="_Save As" Command="{Binding FileSaveAsCommand}"/>
                <MenuItem x:Name="Print" Header="_Print" Command="{Binding FilePrintCommand}" InputGestureText="Ctrl+P"/>
                <MenuItem x:Name="Close" Header="_Close" Command="{Binding FileCloseCommand}"/>
                <MenuItem x:Name="RecentFiles" Header="_Recent Files" ItemsSource="{Binding RecentFileMenuItems}"/>
                <Separator/>
                <MenuItem x:Name="Exit" Header="_Exit" Command="{Binding FileExitCommand}"/>
            </MenuItem>
            <MenuItem Header="Sen_d" Command="{Binding SendCommand}"/>
        </Menu>
        <Border Grid.Row="1" Grid.ColumnSpan="3" BorderBrush="Black" BorderThickness="1" Margin="10">
            <DataGrid Name="Progressions" ItemsSource="{Binding ProgressionsModel.Progressions}" SelectedIndex="{Binding ProgressionsModel.SelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectionMode="Single" CanUserAddRows="False" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Chord" Width="Auto" Binding="{Binding Progression, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridCheckBoxColumn Header="ShowPHS" Width="Auto" Binding="{Binding ShowPHS, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridCheckBoxColumn Header="ShowXYZ" Width="Auto" Binding="{Binding ShowXYZ, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridCheckBoxColumn Header="ShowYZ" Width="Auto" Binding="{Binding ShowYZ, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridCheckBoxColumn Header="ShowY" Width="Auto" Binding="{Binding ShowY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridComboBoxColumn Header="ObjectMapping" Width="Auto" SelectedItemBinding="{Binding ObjectMapping, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource myEnum1}}"/>
                    <DataGridCheckBoxColumn Header="ShowDist" Width="Auto" Binding="{Binding ShowDistance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridComboBoxColumn Header="DistType" Width="Auto" SelectedItemBinding="{Binding DistanceType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource myEnum3}}"/>
                    <DataGridCheckBoxColumn Header="ShowHull" Width="Auto" Binding="{Binding ShowHull, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridComboBoxColumn Header="Alignment" Width="Auto" SelectedItemBinding="{Binding ContentAlignment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource myEnum4}}"/>
                    <DataGridComboBoxColumn Header="ShowNoteAs" Width="Auto" SelectedItemBinding="{Binding ShowNoteAs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource myEnum}}"/>
                    <DataGridCheckBoxColumn Header="ShowOctave" Width="Auto" Binding="{Binding ShowOctave, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridComboBoxColumn Header="XYZStaffLayout" Width="Auto" SelectedItemBinding="{Binding XYZStaffLayout, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource myEnum2}}"/>
                    <!--binding ItemsSource to a view model property requires more code than it is worth, so bind to StaticResource instead-->
                    <DataGridComboBoxColumn Header="Zoom" Width="Auto" SelectedItemBinding="{Binding Zoom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource zoomValues}}"/>
                </DataGrid.Columns>
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <Border BorderThickness="0" Background="BlanchedAlmond" Padding="10">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock FontSize="12" Text="Chords: " VerticalAlignment="Center" />
                                <TextBox Grid.Column="1" Text="{Binding EditProgression, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" FontSize="12" Foreground="MidnightBlue" VerticalAlignment="Center" />
                                <TextBlock Grid.Row="1" FontSize="12" Text="Snapshots: " VerticalAlignment="Center" />
                                <DataGrid  Grid.Row="1" Grid.Column="1" x:Name="Selections" ItemsSource="{Binding SnapshotSelections}" CanUserAddRows="False" AutoGenerateColumns="False">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Chord" Width="Auto" Binding="{Binding Chord}" IsReadOnly="True"/>
                                        <DataGridTemplateColumn Header="Index" Width="256">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Slider Value="{Binding Index, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="{Binding MaxIndex}" TickPlacement="BottomRight" TickFrequency="1" IsSnapToTickEnabled="True" AutoToolTipPlacement="TopLeft" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--<DataGridTextColumn Header="Index" Width="Auto" Binding="{Binding Index}"/>-->
                                        <!--<DataGridTextColumn Header="Count" Width="Auto" Binding="{Binding Count}" IsReadOnly="True"/>-->
                                        <DataGridTextColumn Header="Snapshot" Width="Auto" Binding="{Binding Snapshot}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Type" Width="Auto" Binding="{Binding FrameTypeString}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Path" Width="Auto" Binding="{Binding Path}" IsReadOnly="True"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>
            </DataGrid>
        </Border>
        <Border Grid.Row="2" Grid.ColumnSpan="3" BorderBrush="Black" BorderThickness="1" Margin="10"></Border>
        <!--<Button x:Name="button" Grid.Row="2" Height="24" Width="100" Click="button_Click"></Button>-->
    </Grid>
</Window>
